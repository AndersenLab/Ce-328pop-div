axis.title.y = element_text(size=11, color='black'),
axis.text.y= element_text(size=10, color='black'),
axis.text.x = element_text(size=10, color='black'),
legend.position = c(0.75,0.85), panel.grid = element_blank(),
legend.text =element_text(size=9, color='black'),
legend.background = element_rect(fill = "transparent", colour = "transparent"),
legend.key.width = unit(0.3, "in"),
legend.key.height = unit(0.05,"in")) +
labs(x = "Distance (kb)", y = "Linkage disequilibrium", linetype = "") +
guides(linetype = guide_legend(override.aes = list(size=1.5, alpha = 1))) +
scale_x_continuous(expand = c(0.02,0.02))
Fig3ab <- cowplot::plot_grid(plot_divergent_strain_geo_common, plot_LDdecay, labels = c("a","b"),nrow=1, rel_widths = c(1,1), label_size = 12)
Fig3cd <- cowplot::plot_grid(plot_div_TajD, plot_wormcat_2, labels = c("c","d"),nrow=1, rel_widths = c(1,3), label_size = 12)
Fig3 <- cowplot::plot_grid(Fig3ab, Fig3cd, rel_widths = c(2,1), ncol=1, label_size = 12)
ggsave("Plots/Main/Fig3.png", Fig3, width = 7.5, height = 5.5)
plot_LDdecay <- df_LDdecay %>%
dplyr::filter(dist >= 10) %>%
ggplot(.) +
aes(x=dist/1e3, y=mean_r2, group=class, linetype = class) +
#geom_point(size = 0.01, alpha =0.2, aes(color = class)) +
geom_smooth(se = T, size = 0.3, level = 0.999, color='black') + ## `geom_smooth()` using method = 'gam' and formula 'y ~ s(x, bs = "cs")'
scale_color_brewer(palette = 'Set1') +
scale_linetype(guide=FALSE) +
theme_bw() +
theme(axis.title.x = element_text(size=11, color='black'),
axis.title.y = element_text(size=11, color='black'),
axis.text.y= element_text(size=10, color='black'),
axis.text.x = element_text(size=10, color='black'),
legend.position = c(0.7,0.85), panel.grid = element_blank(),
legend.text =element_text(size=9, color='black'),
legend.background = element_rect(fill = "transparent", colour = "transparent"),
legend.key.width = unit(0.4, "in"),
legend.key.height = unit(0.03,"in")) +
labs(x = "Distance (kb)", y = "Linkage disequilibrium", linetype = "") +
guides(linetype = guide_legend(override.aes = list(size=1.5, alpha = 1))) +
scale_x_continuous(expand = c(0.02,0.02))
plot_LDdecay
Fig3cd <- cowplot::plot_grid(plot_div_TajD, plot_wormcat_2, labels = c("c","d"),nrow=1, rel_widths = c(1,3), label_size = 12)
Fig3 <- cowplot::plot_grid(Fig3ab, Fig3cd, rel_widths = c(2,1), ncol=1, label_size = 12)
ggsave("Plots/Main/Fig3.png", Fig3, width = 7.5, height = 5.5)
Fig3ab <- cowplot::plot_grid(plot_divergent_strain_geo_common, plot_LDdecay, labels = c("a","b"),nrow=1, rel_widths = c(1,1), label_size = 12)
Fig3cd <- cowplot::plot_grid(plot_div_TajD, plot_wormcat_2, labels = c("c","d"),nrow=1, rel_widths = c(1,3), label_size = 12)
Fig3 <- cowplot::plot_grid(Fig3ab, Fig3cd, rel_widths = c(2,1), ncol=1, label_size = 12)
ggsave("Plots/Main/Fig3.png", Fig3, width = 7.5, height = 5.5)
ggsave("Plots/Main/Fig3.pdf", Fig3, width = 7.5, height = 5.5)
dplyr::filter(patho_genes, pathogen == "Orsay virus")
t.test
?t.test
dplyr::filter(patho_genes, pathogen == "Orsay virus" & is.divergent = T)
dplyr::filter(patho_genes, pathogen == "Orsay virus" & is.divergent == T)
dplyr::filter(patho_genes, pathogen == "Orsay virus" & is_divergent == T)
t.test(dplyr::filter(patho_genes, pathogen == "Orsay virus" & is_divergent == T),
dplyr::filter(patho_genes, pathogen == "Orsay virus" & is_divergent == F))
dplyr::filter(patho_genes, pathogen == "Orsay virus" & is_divergent == F)
t.test(dplyr::filter(patho_genes, pathogen == "Orsay virus" & is_divergent == T)$log2_fold_change,
dplyr::filter(patho_genes, pathogen == "Orsay virus" & is_divergent == F)$log2_fold_change)
t.test(dplyr::filter(patho_genes, pathogen == "N. parisii" & is_divergent == T)$log2_fold_change,
dplyr::filter(patho_genes, pathogen == "N. parisii" & is_divergent == F)$log2_fold_change)
View(df_divergent_count_summary)
View(df_div_stats_summary)
df_accuracy_final_ <- read.table(file = "Processed_Data/df_accuracy_final.tsv", header=T)
View(df_accuracy_final_)
View(df_accuracy_final_)
View(df_accuracy_final_)
df_final_select_comp_all <- read.table(file = "Processed_Data/df_final_select_comp_all.tsv", header=T)
View(df_final_select_comp_all)
View(df_accuracy_final_)
View(df_final_select_comp_all)
strain = "CB4856"
Shortread_raw <- data.table::fread(glue::glue("Processed_Data/Processed_Masks_nohet_DELINS20kb/{strain}_Mask_DF.tsv")) %>%
dplyr::select(CHROM, START_BIN, END_BIN, STRAIN, COUNT, COVERAGE, fraction_SV_bases)
Shortread_raw_coverage <- Shortread_raw %>%
dplyr::group_by(STRAIN) %>%
dplyr::summarise(mean_cov_genome = mean(COVERAGE)) %>%
dplyr::ungroup()
Shortread_coverage_fraction <- Shortread_raw %>%
dplyr::left_join(., Shortread_raw_coverage, by = "STRAIN") %>%
dplyr::mutate(fraction_cov = COVERAGE/mean_cov_genome)
Longread_raw <- read_tsv(file=glue::glue("Processed_Data/longread_align/{strain}_vs_N2.coords")) %>%
dplyr::rename(Ref_start = '[S1]', Ref_end = '[E1]', Wild_start = '[S2]', Wild_end = '[E2]',
Ref_length = '[LEN 1]', Wild_length = '[LEN 2]', Identity = "[% IDY]",
Ref_chrom_length = '[LEN R]', Wild_chrom_length='[LEN Q]', CHROM='[TAGS]')
Longread_raw_ID <- Longread_raw %>%
dplyr::select(chrom=CHROM, start=Ref_start, end=Ref_end, Identity)
df_bins <- read_tsv(file="Processed_Data/df_bins.tsv") %>%
dplyr::rename(chrom=chr, end=stop)
df_bins_longread <- valr::bed_intersect(df_bins,Longread_raw_ID) %>%
dplyr::rename(CHROM=chrom, START_BIN=start.x, END_BIN=end.x,
start=start.y, stop=end.y, coverage=.overlap, Identity=Identity.y) %>%
dplyr::mutate(full_cov = ifelse(coverage == 1e3, T, F)) %>%
dplyr::group_by(CHROM, START_BIN, END_BIN) %>%
dplyr::mutate(max_coverage = max(coverage), max_ID=max(Identity)) %>%
dplyr::filter(coverage == max_coverage) %>%
dplyr::mutate(bin_ID = max(Identity)) %>%
dplyr::ungroup() %>%
dplyr::mutate(bin_ID_normalized = max(Identity)*coverage/1e3)
df_divergent_comp <- Shortread_coverage_fraction %>%
dplyr::left_join(., df_bins_longread, by=c("CHROM", "START_BIN","END_BIN")) %>%
dplyr::mutate(bin_ID_normalized = ifelse(is.na(bin_ID), 0, bin_ID),
max_coverage = ifelse(is.na(bin_ID), 0, max_coverage)) %>%
dplyr::group_by(CHROM, START_BIN, END_BIN) %>%
dplyr::mutate(n=n()) %>%
dplyr::ungroup() %>%
dplyr::distinct(CHROM, START_BIN, END_BIN, bin_ID, .keep_all=T)
df_divergent_comp_div <- df_divergent_comp %>%
dplyr::mutate(div_class = ifelse(max_ID < id | is.na(max_ID) | max_coverage <= long_cov*10, "div", "Pass")) %>%
dplyr::mutate(div_twoflank = ifelse((grepl("Pass", dplyr::lag(div_class)) | grepl("Pass", dplyr::lead(div_class))) | !grepl("Pass", div_class), "Pass", "TwoFlank")) %>%
dplyr::filter(div_class == "div" | div_twoflank == "TwoFlank") %>%
dplyr::select(CHROM, START_BIN, END_BIN, bin_ID, max_coverage, bin_ID_normalized, COUNT, fraction_cov, div_class, div_twoflank) %>%
dplyr::rename(longread_coverage=max_coverage, shortread_depth = fraction_cov) %>%
join_masks(.) %>%
dplyr::mutate(div_cluster=ifelse(cluster_size >= long_size*1e3, 'Divergent', 'Non-divergent'))
shortread_div <- Shortread_coverage_fraction  %>%
dplyr::mutate(window_ID = paste(CHROM, START_BIN, END_BIN)) %>%
dplyr::mutate(div_count = ifelse(COUNT>ct, "Count", "Pass"), div_lowcov = ifelse(fraction_cov<cov, "LowCoverage", "Pass")) %>%
dplyr::mutate(div_class = ifelse(paste(div_count, div_lowcov, sep="_") == "Pass_Pass", "Pass", "Divergent")) %>%
dplyr::mutate(div_twoflank = ifelse((grepl("Pass", dplyr::lag(div_class)) | grepl("Pass", dplyr::lead(div_class))) | !grepl("Pass", div_class), "Pass", "TwoFlank")) %>%
dplyr::mutate(div_id = paste(ifelse(div_count=="Pass","",div_count), ifelse(div_lowcov=="Pass","",div_lowcov), ifelse(div_twoflank=="Pass","",div_twoflank), sep=""), div_class = ifelse(paste(div_count, div_lowcov, div_twoflank, sep="_") == "Pass_Pass_Pass", "Pass", "Divergent"))
cluster_start <- NA
cluster_end <- NA
df_div_cluster <- shortread_div %>%
dplyr::group_by(STRAIN, CHROM) %>%
dplyr::mutate(cluster = ifelse(((grepl("Divergent", dplyr::lag(div_class)) | grepl("Divergent", dplyr::lead(div_class)))) & grepl("Divergent", div_class), T, F)) %>%
dplyr::mutate(cluster_start = ifelse(dplyr::lag(cluster) == F & cluster == T & dplyr::lead(cluster) == T, START_BIN,NA)) %>%
dplyr::ungroup() %>%
dplyr::select(STRAIN, CHROM, START_BIN, END_BIN, window_ID, div_class, div_id, cluster, cluster_start)
df_div_cluster_filtered <- df_div_cluster %>%
dplyr::filter(cluster == T)
cluster_start_vec <- df_div_cluster_filtered$cluster_start
for (i in 1:length(cluster_start_vec)) {
cluster_start_vec[i] <- ifelse(!is.na(cluster_start_vec[i]), cluster_start_vec[i], cluster_start_vec[i-1])
}
df_div_cluster_filtered <- df_div_cluster_filtered %>%
dplyr::select(-cluster_start) %>%
dplyr::mutate(cluster_start=cluster_start_vec)
df_div_cluster_size <- df_div_cluster %>%
dplyr::select(-cluster_start) %>%
dplyr::left_join(., dplyr::select(df_div_cluster_filtered, STRAIN, window_ID, cluster_start), by=c('STRAIN','window_ID')) %>%
dplyr::group_by(STRAIN, CHROM, cluster_start) %>%
dplyr::mutate(cluster_size=ifelse(div_class %in% c("Pass", "N2_fp"), NA, ifelse(is.na(cluster_start), 1000, n()*1000))) %>%
dplyr::ungroup() %>%
dplyr::mutate(cluster_end=cluster_start+cluster_size)
df_gap_bind_list <- divergent_gap(df=df_div_cluster_size, threshold = gap_cluster_threshold, gap_threshold=gap_size_threshold)
df_gap_bind <- df_gap_bind_list[[1]]
df_gap_bind_all_bins <- df_gap_bind_list[[2]] %>%
dplyr::mutate(div_id = ifelse(div_class == "Divergent", div_id,
ifelse(dplyr::lag(END_BIN, 1) == dplyr::lag(cluster_end, 1) & dplyr::lag(gap_join, 1) == 'join' |
dplyr::lag(END_BIN, 2) == dplyr::lag(cluster_end, 2) & dplyr::lag(gap_join, 2) == "join" |
dplyr::lag(END_BIN, 3) == dplyr::lag(cluster_end, 3) & dplyr::lag(gap_join, 3) == "join" |
dplyr::lag(END_BIN, 4) == dplyr::lag(cluster_end, 4) & dplyr::lag(gap_join, 4) == "join" |
dplyr::lag(END_BIN, 5) == dplyr::lag(cluster_end, 5) & dplyr::lag(gap_join, 5) == "join" |
dplyr::lag(END_BIN, 6) == dplyr::lag(cluster_end, 6) & dplyr::lag(gap_join, 6) == "join" |
dplyr::lag(END_BIN, 7) == dplyr::lag(cluster_end, 7) & dplyr::lag(gap_join, 7) == "join" |
dplyr::lag(END_BIN, 8) == dplyr::lag(cluster_end, 8) & dplyr::lag(gap_join, 8) == "join", "gap", div_id))) %>%
dplyr::mutate(div_id = ifelse(is.na(div_id),"", div_id)) %>%
dplyr::mutate(div_class = ifelse(div_id == "gap", "Divergent", div_class)) %>%
dplyr::select(STRAIN, CHROM, START_BIN, END_BIN, window_ID, div_class, div_id)
df_div_cluster_gapjoined <- df_gap_bind_all_bins %>%
dplyr::group_by(STRAIN, CHROM) %>%
dplyr::mutate(cluster = ifelse(((grepl("Divergent", dplyr::lag(div_class)) | grepl("Divergent", dplyr::lead(div_class)))) & grepl("Divergent", div_class), T, F)) %>%
dplyr::mutate(cluster_start = ifelse(dplyr::lag(cluster) == F & cluster == T & dplyr::lead(cluster) == T, START_BIN,NA)) %>%
dplyr::ungroup() %>%
dplyr::select(STRAIN, CHROM, START_BIN, END_BIN, window_ID, div_class, div_id, cluster, cluster_start)
df_div_cluster_gapjoined_filtered <- df_div_cluster_gapjoined %>%
dplyr::filter(cluster == T)
cluster_start_gapjoined_vec <- df_div_cluster_gapjoined_filtered$cluster_start
for (i in 1:length(cluster_start_gapjoined_vec)) {
cluster_start_gapjoined_vec[i] <- ifelse(!is.na(cluster_start_gapjoined_vec[i]), cluster_start_gapjoined_vec[i], cluster_start_gapjoined_vec[i-1])
}
df_div_cluster_gapjoined_filtered <- df_div_cluster_gapjoined_filtered %>%
dplyr::select(-cluster_start) %>%
dplyr::mutate(cluster_start=cluster_start_gapjoined_vec)
df_div_cluster_gapjoined_size <- df_div_cluster_gapjoined %>%
dplyr::select(-cluster_start) %>%
dplyr::left_join(., dplyr::select(df_div_cluster_gapjoined_filtered, STRAIN, window_ID, cluster_start), by=c('STRAIN','window_ID')) %>%
dplyr::group_by(STRAIN, CHROM, cluster_start) %>%
dplyr::mutate(cluster_size=ifelse(div_class %in% c("Pass", "N2_fp"), NA, ifelse(is.na(cluster_start), 1000, n()*1000))) %>%
dplyr::ungroup() %>%
dplyr::mutate(cluster_end=cluster_start+cluster_size)
df_divergent_final_select <- df_div_cluster_gapjoined_size %>%
dplyr::mutate(is_count = ifelse(div_id %in% c("Count", "CountLowCoverage"), 1, 0)) %>%
dplyr::group_by(STRAIN, CHROM, cluster_start, cluster_end) %>%
dplyr::mutate(flag_del = ifelse(max(is_count)==0, "Del", "Pass")) %>%
dplyr::ungroup() %>%
dplyr::select(CHROM, START_BIN, END_BIN, div_class, div_id, cluster_start, cluster_end, cluster_size,flag_del)
df_final <- df_divergent_final_select %>%
dplyr::mutate(class = ifelse(cluster_size >=clu_threshold & flag_del == "Pass", "Divergent", "Non-divergent")) %>%
dplyr::mutate(class=ifelse(is.na(class), "Non-divergent", class)) %>%
dplyr::filter(class == "Divergent")
df_final_select_short <- df_final %>%
dplyr::select(CHROM, START_BIN, END_BIN, cluster_start, cluster_end) %>%
dplyr::mutate(source="shortread")
df_final_select_long <- df_divergent_comp_div %>%
dplyr::filter(div_cluster == "Divergent") %>%
dplyr::select(CHROM, START_BIN, END_BIN, cluster_start, cluster_end) %>%
dplyr::mutate(source="longread")
df_final_select_comp <- rbind(df_final_select_short, df_final_select_long) %>%
dplyr::group_by(CHROM, START_BIN, END_BIN) %>%
dplyr::mutate(n=n()) %>%
dplyr::ungroup() %>%
dplyr::mutate(class=ifelse(n==2, "both", ifelse(source == "shortread", "short_only", "long_only"))) %>%
dplyr::distinct(CHROM, START_BIN, END_BIN, class) %>%
dplyr::arrange(CHROM, START_BIN, END_BIN) %>%
join_masks(.) %>%
dplyr::mutate(isotype=strain)
df_final_select_comp_all <- rbind(df_final_select_comp_all, df_final_select_comp)
View(df_final_select_comp_all)
longread_strains <- c("CB4856", "DL238", "ECA36", "ECA396", "EG4725", "JU310", "JU1400", "JU2526", "JU2600", "MY2147", "MY2693", "NIC2", "NIC526","QX1794", "XZ1516")
id=95
long_size=9
long_cov=60
cov=0.35
ct=15
clu_threshold=9000
gap_cluster_threshold=9000
gap_size_threshold=5000
df_final_select_comp_all <- NULL
df_accuracy_final <- NULL
load("Processed_Data/Divergent_chromosome_stats.RData")
plot_div_chrom_comp <- df_div_stats_genome_summary_gather %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col(position = position_dodge(width = 1)) +
aes(x=location, y=as.numeric(value), fill=class) +
theme_bw() +
scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.position = c(0.87,0.40),
legend.margin = margin(0,0,0,0))+
facet_grid(stats~CHROM, scales = 'free') +
labs(y="Statistics")
plot_div_chrom_comp
df_div_stats_genome_summary_gather_spread <- df_div_stats_genome_summary_gather %>%
dplyr::mutate(class=ifelse(class=="Hyper-divergent", "Divergent", class)) %>%
dplyr::mutate(class=ifelse(class=="Non-divergent", "Non_divergent", class)) %>%
tidyr::spread(key=class, value=value) %>%
dplyr::mutate(ratio=as.numeric(Divergent)/as.numeric(Non_divergent))
plot_fold_diff_div <- df_div_stats_genome_summary_gather_spread %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col() +
aes(x=location, y=as.numeric(ratio)) +
theme_bw() +
#scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_text(size=11, color='black'),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.background = element_rect(fill = "transparent", colour = "transparent"))+
labs(y="Fold difference") +
facet_grid(stats~CHROM, scales = 'free')
df_div_stats_genome_summary_gather$class <- factor(df_div_stats_genome_summary_gather$class, levels = c("All", "Center", "Arm", "Tip"))
plot_div_chrom_comp <- df_div_stats_genome_summary_gather %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col(position = position_dodge(width = 1)) +
aes(x=location, y=as.numeric(value), fill=class) +
theme_bw() +
scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.position = c(0.87,0.40),
legend.margin = margin(0,0,0,0))+
facet_grid(stats~CHROM, scales = 'free') +
labs(y="Statistics")
plot_div_chrom_comp
df_div_stats_genome_summary_gather_spread <- df_div_stats_genome_summary_gather %>%
dplyr::mutate(class=ifelse(class=="Hyper-divergent", "Divergent", class)) %>%
dplyr::mutate(class=ifelse(class=="Non-divergent", "Non_divergent", class)) %>%
tidyr::spread(key=class, value=value) %>%
dplyr::mutate(ratio=as.numeric(Divergent)/as.numeric(Non_divergent))
plot_fold_diff_div <- df_div_stats_genome_summary_gather_spread %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col() +
aes(x=location, y=as.numeric(ratio)) +
theme_bw() +
#scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_text(size=11, color='black'),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.background = element_rect(fill = "transparent", colour = "transparent"))+
labs(y="Fold difference") +
facet_grid(stats~CHROM, scales = 'free')
FigS7 <- cowplot::plot_grid(plot_div_chrom_comp, plot_fold_diff_div,
labels = c("a","b"), ncol=1,
align = 'v', rel_heights = c(1.5,1), axis = 'l', label_size = 12)
FigS7
View(df_div_stats_genome_summary_gather)
D
load("Processed_Data/Divergent_chromosome_stats.RData")
df_div_stats_genome_summary_gather$location <- factor(df_div_stats_genome_summary_gather$location, levels = c("All", "Center", "Arm", "Tip"))
plot_div_chrom_comp <- df_div_stats_genome_summary_gather %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col(position = position_dodge(width = 1)) +
aes(x=location, y=as.numeric(value), fill=class) +
theme_bw() +
scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.position = c(0.87,0.40),
legend.margin = margin(0,0,0,0))+
facet_grid(stats~CHROM, scales = 'free') +
labs(y="Statistics")
plot_div_chrom_comp
df_div_stats_genome_summary_gather_spread <- df_div_stats_genome_summary_gather %>%
dplyr::mutate(class=ifelse(class=="Hyper-divergent", "Divergent", class)) %>%
dplyr::mutate(class=ifelse(class=="Non-divergent", "Non_divergent", class)) %>%
tidyr::spread(key=class, value=value) %>%
dplyr::mutate(ratio=as.numeric(Divergent)/as.numeric(Non_divergent))
plot_fold_diff_div <- df_div_stats_genome_summary_gather_spread %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col() +
aes(x=location, y=as.numeric(ratio)) +
theme_bw() +
#scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_text(size=11, color='black'),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.background = element_rect(fill = "transparent", colour = "transparent"))+
labs(y="Fold difference") +
facet_grid(stats~CHROM, scales = 'free')
FigS7 <- cowplot::plot_grid(plot_div_chrom_comp, plot_fold_diff_div,
labels = c("a","b"), ncol=1,
align = 'v', rel_heights = c(1.5,1), axis = 'l', label_size = 12)
ggsave(FigS7, file = "Plots/Supplementary/FigS7.png", width=7.5, height=9, unit = 'in')
ggsave(FigS7, file = "Plots/Supplementary/FigS7.pdf", width=7.5, height=9, unit = 'in')
ggsave(FigS7, file = "Plots/Supplementary/FigS7.pdf", width=7.5, height=9.5, unit = 'in')
ggsave(FigS7, file = "Plots/Supplementary/FigS7.png", width=7.5, height=9.5, unit = 'in')
FigS7 <- cowplot::plot_grid(plot_div_chrom_comp, plot_fold_diff_div,
labels = c("a","b"), ncol=1,
align = 'v', rel_heights = c(1.3,1), axis = 'l', label_size = 12)
ggsave(FigS7, file = "Plots/Supplementary/FigS7.png", width=7.5, height=9.5, unit = 'in')
ggsave(FigS7, file = "Plots/Supplementary/FigS7.pdf", width=7.5, height=9.5, unit = 'in')
load("Processed_Data/PCA.RData")
View(df_pcs_noremoval_complete)
15*1.552195
R
R
load("Processed_Data/WormCat.RData")
View(df_cat1)
View(df_cat2)
317/598
View(df_cat3)
ggsave("Plots/Extended/cbr_div.pdf", ExFig6, width =  7.5, height = 6)
cbr_plot_div_pop <- cbr_df_join_div %>%
na.omit() %>%
ggplot(.) +
geom_rect(aes(xmin =  cluster_start/1e6, xmax = cluster_end/1e6, ymin = plotpoint-0.5 , ymax = plotpoint+0.5), fill = 'black',color='black', size = 0.2) +
#geom_segment(data=cbr_df_common_div, aes(x=(cluster_start+cluster_end)/2e6, xend=(cluster_start+cluster_end)/2e6, y=0.48, yend=36.52), color='brown', alpha=0.7, size=0.1) +
#geom_rug(data=cbr_df_common_div, sides="b", color='brown', aes(x=(cluster_start+cluster_end)/2e6), length = unit(0.03, "npc"), size=0.3) +
geom_hline(yintercept = 0, color='black', size=0.4) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y  = element_blank(), axis.title.y = element_text(size=11, color = "black"), strip.text = element_text(size=10, color = "black"),
legend.position = 'none', axis.title.x = element_blank(), axis.ticks.y = element_blank(),
strip.text.y=element_text(size=9, color = "black", angle = 180),
panel.spacing = unit(0.1, "lines"), panel.grid = element_blank()) +
labs(x="Genomic position (Mb)", y="35 wild C. briggsae strains") +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand = c(0.02, 0.02), breaks = c(5, 10, 15, 20)) +
#facet_grid(cluster~CHROM, scales = 'free', space = 'free') +
facet_grid(group~CHROM, scales="free", switch = "y", space = 'free')
load("Processed_Data/Cbr_divergent.RData")
cbr_plot_div_pop <- cbr_df_join_div %>%
na.omit() %>%
ggplot(.) +
geom_rect(aes(xmin =  cluster_start/1e6, xmax = cluster_end/1e6, ymin = plotpoint-0.5 , ymax = plotpoint+0.5), fill = 'black',color='black', size = 0.2) +
#geom_segment(data=cbr_df_common_div, aes(x=(cluster_start+cluster_end)/2e6, xend=(cluster_start+cluster_end)/2e6, y=0.48, yend=36.52), color='brown', alpha=0.7, size=0.1) +
#geom_rug(data=cbr_df_common_div, sides="b", color='brown', aes(x=(cluster_start+cluster_end)/2e6), length = unit(0.03, "npc"), size=0.3) +
geom_hline(yintercept = 0, color='black', size=0.4) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y  = element_blank(), axis.title.y = element_text(size=11, color = "black"), strip.text = element_text(size=10, color = "black"),
legend.position = 'none', axis.title.x = element_blank(), axis.ticks.y = element_blank(),
strip.text.y=element_text(size=9, color = "black", angle = 180),
panel.spacing = unit(0.1, "lines"), panel.grid = element_blank()) +
labs(x="Genomic position (Mb)", y="35 wild C. briggsae strains") +
scale_y_continuous(expand=c(0,0)) +
scale_x_continuous(expand = c(0.02, 0.02), breaks = c(5, 10, 15, 20)) +
#facet_grid(cluster~CHROM, scales = 'free', space = 'free') +
facet_grid(group~CHROM, scales="free", switch = "y", space = 'free')
cbr_plot_div_pop
cbr_plot_div_pop_rug <- cbr_df_common_div %>%
ggplot(.) +
geom_rect(data=dplyr::mutate(cbr_df_join_div, group="Common"), aes(xmin =  cluster_start/1e6, xmax = cluster_end/1e6, ymin=0.2, ymax=0.5),
fill = 'transparent',color='transparent', size = 0.2) +
geom_rect(color='brown', aes(xmin=cluster_start/1e6, xmax=cluster_end/1e6, ymin=0.2, ymax=0.5), size = 0.2) +
theme_bw() +
theme(axis.text.x = element_blank(), axis.text.y  = element_blank(), axis.title.y = element_text(size=11, color = "black"),
legend.position = 'none', axis.title.x = element_text(size=11, color = "black"), axis.ticks.y = element_blank(),
panel.spacing = unit(0.1, "lines"), panel.grid = element_blank(),
strip.background = element_blank(),
strip.text.x = element_blank(),
strip.text.y = element_blank()) +
labs(x="Genomic position (Mb)", y="") +
scale_x_continuous(expand = c(0.02, 0.02), breaks = c(5, 10, 15, 20)) +
scale_y_continuous(expand=c(0,0)) +
facet_grid(group~CHROM, scales="free", switch = "y", space = 'free')
cbr_plot_div_pop_rug
ExFig6 <- cowplot::plot_grid(cbr_plot_div_pop, cbr_plot_div_pop_rug, ncol=1, rel_heights = c(10,1), align = "v")
ExFig6
ggsave("Plots/Extended/cbr_div.pdf", ExFig6, width =  7.5, height = 6)
load("Processed_Data/Divergent_chromosome_stats.RData")
df_div_stats_genome_summary_gather$location <- factor(df_div_stats_genome_summary_gather$location, levels = c("All", "Center", "Arm", "Tip"), labels = c("All", "Center", "Arms", "Tips"))
plot_div_chrom_comp <- df_div_stats_genome_summary_gather %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col(position = position_dodge(width = 1)) +
aes(x=location, y=as.numeric(value), fill=class) +
theme_bw() +
scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.position = c(0.87,0.40),
legend.margin = margin(0,0,0,0))+
facet_grid(stats~CHROM, scales = 'free') +
labs(y="Statistics")
plot_div_chrom_comp
df_div_stats_genome_summary_gather_spread <- df_div_stats_genome_summary_gather %>%
dplyr::mutate(class=ifelse(class=="Hyper-divergent", "Divergent", class)) %>%
dplyr::mutate(class=ifelse(class=="Non-divergent", "Non_divergent", class)) %>%
tidyr::spread(key=class, value=value) %>%
dplyr::mutate(ratio=as.numeric(Divergent)/as.numeric(Non_divergent))
plot_fold_diff_div <- df_div_stats_genome_summary_gather_spread %>%
dplyr::filter(stats != "Size") %>%
ggplot(.) +
geom_col() +
aes(x=location, y=as.numeric(ratio)) +
theme_bw() +
#scale_fill_brewer(palette = 'Set1') +
theme(axis.text.x = element_text(size=10, angle = 90, vjust = 0.5, hjust=1, color='black'),
axis.title.y = element_text(size=11, color='black'),
axis.title.x = element_blank(),
axis.text.y = element_text(size=10, color='black'),
legend.title = element_blank(),
panel.grid = element_blank(),
strip.text = element_text(size=10, color='black'),
legend.text = element_text(size=10, color='black'),
legend.background = element_rect(fill = "transparent", colour = "transparent"))+
labs(y="Fold difference") +
facet_grid(stats~CHROM, scales = 'free')
FigS7 <- cowplot::plot_grid(plot_div_chrom_comp, plot_fold_diff_div,
labels = c("a","b"), ncol=1,
align = 'v', rel_heights = c(1.3,1), axis = 'l', label_size = 12)
ggsave(FigS7, file = "Plots/Supplementary/FigS7.pdf", width=7.5, height=9.5, unit = 'in')
ggsave(FigS7, file = "Plots/Supplementary/FigS7.png", width=7.5, height=9.5, unit = 'in')
load("Processed_Data/divergent_joined.RData")
load("Processed_Data/divergent_count_summary.RData")
View(df_divergent_count_summary)
View(df_divergent_count_summary)
11673/3224
View(df_join_div)
load("Processed_Data/divergent_joined.RData")
div_summary <- df_divergent_final %>%
dplyr::distinct(STRAIN, CHROM, cluster_start, cluster_size, cluster_end) %>%
na.omit() %>%
dplyr::group_by(STRAIN) %>%
dplyr::summarise(sum = sum(cluster_size)) %>%
dplyr::ungroup() %>%
dplyr::arrange(-sum) %>%
dplyr::rename(isotype=STRAIN) %>%
dplyr::mutate(plotpoint=row_number())
load("Processed_Data/divergent_classification.RData")
div_summary <- df_divergent_final %>%
dplyr::distinct(STRAIN, CHROM, cluster_start, cluster_size, cluster_end) %>%
na.omit() %>%
dplyr::group_by(STRAIN) %>%
dplyr::summarise(sum = sum(cluster_size)) %>%
dplyr::ungroup() %>%
dplyr::arrange(-sum) %>%
dplyr::rename(isotype=STRAIN) %>%
dplyr::mutate(plotpoint=row_number())
